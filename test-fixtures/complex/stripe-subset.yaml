openapi: 3.0.0
info:
  title: Stripe API Subset
  version: 1.0.0
  description: Subset of Stripe API for complex testing (20 endpoints)
servers:
  - url: https://api.stripe.com/v1

security:
  - bearerAuth: []

paths:
  /customers:
    get:
      operationId: listCustomers
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: starting_after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    enum: [list]
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
    post:
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                description:
                  type: string
                metadata:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customers/{customerId}:
    parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getCustomer
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /payment_intents:
    post:
      operationId: createPaymentIntent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, currency]
              properties:
                amount:
                  type: integer
                  minimum: 1
                currency:
                  type: string
                  enum: [usd, eur, gbp, jpy, aud, cad]
                customer:
                  type: string
                description:
                  type: string
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                payment_method_types:
                  type: array
                  items:
                    type: string
                    enum: [card, bank_transfer, ideal, sepa_debit]
      responses:
        '200':
          description: Payment intent created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'

  /charges:
    get:
      operationId: listCharges
      parameters:
        - name: customer
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of charges
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    enum: [list]
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Charge'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Use your Stripe secret key

  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          pattern: '^cus_[a-zA-Z0-9]+$'
        object:
          type: string
          enum: [customer]
        created:
          type: integer
          format: unix-time
        email:
          type: string
          format: email
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
        default_source:
          type: string
          nullable: true
        sources:
          type: object
          properties:
            object:
              type: string
              enum: [list]
            data:
              type: array
              items:
                $ref: '#/components/schemas/Source'

    PaymentIntent:
      type: object
      properties:
        id:
          type: string
          pattern: '^pi_[a-zA-Z0-9]+$'
        object:
          type: string
          enum: [payment_intent]
        amount:
          type: integer
        currency:
          type: string
        status:
          type: string
          enum: [requires_payment_method, requires_confirmation, requires_action, processing, requires_capture, canceled, succeeded]
        client_secret:
          type: string
        created:
          type: integer
          format: unix-time
        customer:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
        charges:
          type: object
          properties:
            object:
              type: string
              enum: [list]
            data:
              type: array
              items:
                $ref: '#/components/schemas/Charge'

    Charge:
      type: object
      properties:
        id:
          type: string
          pattern: '^ch_[a-zA-Z0-9]+$'
        object:
          type: string
          enum: [charge]
        amount:
          type: integer
        currency:
          type: string
        created:
          type: integer
          format: unix-time
        customer:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        paid:
          type: boolean
        status:
          type: string
          enum: [succeeded, pending, failed]
        metadata:
          type: object
          additionalProperties:
            type: string

    Source:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          enum: [card, bank_account, source]
        brand:
          type: string
          enum: [visa, mastercard, amex, discover, jcb, diners, unknown]
        last4:
          type: string
          pattern: '^\d{4}$'
        exp_month:
          type: integer
          minimum: 1
          maximum: 12
        exp_year:
          type: integer
          minimum: 2024